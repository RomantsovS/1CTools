#Использовать logos
#Использовать v8runner
#Использовать gitrunner
Перем Лог;

Перем КаталогРепозитория;

// Инициализация
Процедура Инициализировать()
	
	КаталогРепозитория = "c:\Users\Romantsov.S.S\Documents\Itilium\tmp";
	СобратьРасширение();
	
КонецПроцедуры

// Обновляет информационную базу.
//
// Возвращаемое значение:
//  Булево - Признак успешного выполнения.
//
Функция СобратьРасширение()
	ГитРепозиторий = Новый ГитРепозиторий();
	ГитРепозиторий.УстановитьРабочийКаталог(КаталогРепозитория);
	
	НастройкаКлонирования = Новый НастройкаКомандыКлонировать();
	НастройкаКлонирования.ГлубинаКопии(1);
	НастройкаКлонирования.УстановитьПроизвольныйРежим("--no-single-branch");
	ГитРепозиторий.УстановитьНастройкуКомандыКлонировать(НастройкаКлонирования);
	ГитРепозиторий.КлонироватьРепозиторий("ssh://git@gitlab.sblogistica.ru:7999/sberlogistic/1c/itilium.git");
	ГитРепозиторий.УстановитьРабочийКаталог(КаталогРепозитория + "\\" + "itilium");
	
	ГитРепозиторий.ПерейтиВВетку("develop");
	ГитРепозиторий.Получить();


	
	Возврат Истина;
	
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.app.CompileExt");
Лог.УстановитьУровень(УровниЛога.Отладка);
Логирование.ПолучитьЛог("oscript.lib.gitrunner").УстановитьУровень(Лог.Уровень());
Логирование.ПолучитьЛог("oscript.lib.v8runner").УстановитьУровень(Лог.Уровень());
Инициализировать();